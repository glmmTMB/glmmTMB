% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mvlgcp.R
\name{influence.glmmTMB}
\alias{influence.glmmTMB}
\title{Compute the influence matrix of a fitted \code{glmmTMB} model}
\usage{
\method{influence}{glmmTMB}(model, ..., by.obs = FALSE)
}
\arguments{
\item{model}{a fitted \code{glmmTMB} model object.}

\item{...}{additionally arguments for the S3 generic}

\item{by.obs}{a logical indicating whether the influence should be calculated by observations (\code{=TRUE}) or by terms (\code{=FALSE}). Since the function extracts the diagonal of \eqn{A}, with the goal to compute its trace (for example to calculate effective degrees of freedom), when \code{by.obs=FALSE} the formula for \eqn{A} (below) is re-arranged to avoid some additional matrix multiplication - this effectively calculates the influence by terms rather than observations.}
}
\value{
a vector of influence of length observations in the fitted model (or terms if \code{by.obs=FALSE})
}
\description{
This function computes the influence matrix from a fitted \code{glmmTMB} model along the lines of the package \code{mgcv} (Wood 2017).
}
\details{
The Laplace approximation to a marginalised likelihood function is essentially a penalised likelihood so that there is an equivalence between GAMs (as fitted via \code{mgcv}) and GLMMs as fitted within \code{glmmTMB}.
This means we can use the approach in \code{mgcv} to obtain the influence (hat) matrix (\eqn{\boldsymbol{A}}) of the fitted model. \deqn{\boldsymbol{A} = \boldsymbol{X}(\boldsymbol{X}^{T}\boldsymbol{W}\boldsymbol{X} + \boldsymbol{S})^{-1}\boldsymbol{X}^{T}\boldsymbol{W}}
where \eqn{\boldsymbol{X}} is the \eqn{n\times(p + k)} fixed (\eqn{p}) and random (\eqn{k}) effect design matrices and \eqn{\boldsymbol{W}} is the "weights" matrix which is diagonal with \deqn{[\boldsymbol{W}]_{i,i}=\frac{\text{weights}}{V(\mu_{i})g'(\mu_{i})^{2}}}
where \code{weights} are the observation weights of the fitted model.

\eqn{\boldsymbol{S}} is the \eqn{(p + k)\times(p + k)} penalty matrix comprising blocks for each of the fixed and random components where the fixed effect block is zero everywhere (as these are unpenalised terms). The random effects component has a block diagonal structure where blocks represent independent sets of random effects. For the \eqn{j^{th}} set of random terms, the block is equal to \eqn{\lambda_{j}\boldsymbol{C}^{-1}_{b_{j}}}
where \eqn{\boldsymbol{C}_{b_{j}}} is the correlation matrix of the random effects (within set \eqn{j}) while the smoothing penalty is the dispersion parameter (\eqn{\phi}) squared, divided by the \eqn{j^{th}} random effect variance (\eqn{\sigma^{2}_{b_{j}}}), i.e. \deqn{\lambda_{j} = \frac{\phi^{2}}{\sigma^{2}_{b_{j}}}}
}
\examples{
# fit a GLMM
m <- glmmTMB(count ~ spp + (1 | site), data = Salamanders, family = poisson)
# fit the equivalent GAM
library(mgcv)
m_gam <- gam(count ~ spp + s(site, bs = "re"), data = Salamanders, family = poisson, method = "ML")
# compare influence
par(mfrow = c(1, 2), mar = c(5.1,4.1,4.1,0))
plot(cbind(glmmTMB = influence(m, by.obs = TRUE), mgcv = m_gam$hat), main = "Influence by Observations")
abline(a = 0, b = 1, col = "red", lty = "dashed")
plot(cbind(glmmTMB = influence(m), mgcv = m_gam$edf), main = "Influence by Terms")
abline(a = 0, b = 1, col = "red", lty = "dashed")
# compare effective degrees of freedom
c(glmmTMB = sum(influence(m)), mgcv = sum(m_gam$hat))
}
\references{
Wood, S. N. (2017), Generalized additive models: an introduction with R, \emph{CRC Press}.
}
