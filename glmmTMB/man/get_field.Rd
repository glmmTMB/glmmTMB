% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mvlgcp.R
\name{get_field}
\alias{get_field}
\title{Predict the latent field components from a model fitted via \code{mvlgcp()}}
\usage{
get_field(
  object,
  newdata,
  which.response = NULL,
  combine.response.fields = TRUE
)
}
\arguments{
\item{object}{a fitted \code{glmmTMB} model object.}

\item{newdata}{a data frame containing the point locations (i.e. coordinates used in the original model fit) at which to calculate the field(s). If \code{newdata} is a two-column matrix, these are assumed to be the horizontal and vertical coordinates respectively.}

\item{which.response}{(optional) a single integer (or vector thereof) indicating the which of the response-specific fields to return. Applies only to multivariate LGCP. Response numbers correspond to the response in order of \code{unique(object$response.id)}.}

\item{combine.response.fields}{(optional) a logical indicating whether to combine (sum) independent and shared (reduced rank) fields when \code{which.response} is supplied. Applies only to multivariate LGCP that have \code{mv.flds = "both"} field types included. Default is \code{TRUE}.}
}
\value{
a matrix with \code{nrow(newdata)} rows and k columns - where k is the number of latent fields. k = 1 in the univariate case, k = \code{length(which.response)} when supplied otherwise, k = \code{object$n_factors}.
}
\description{
This function sets up the appropriate basis function matrix for the \code{newdata} provided, then multiplies by the random coefficient terms (at the mode of the Laplace approximation).
}
\details{
The function first calculates basis functions (associated with the fitted \code{object}) at the coordinates within \code{newdata}. The resulting basis function matrix is then multiplied by the random coefficients at their mode (as used in the Laplace approximation of the marginal likelihood). If a specific response field is required, the \code{object$n_factor} latent fields are then multiplied by the response-specific factor loadings.
}
\examples{
# using a subset of the Lansing Wood data:
dat <- lansing[lansing$tree == "blackoak", ]

# set up the basis functions with dimension k = 100
bfs <- make_basis(k = 100, dat)

# fit univariate LGCP to the blackoak point pattern data
m <- mvlgcp(pt ~ 1, data = dat, weights = dat$wt, basis.functions = bfs)

# extract the field
fld <- get_field(m)

# get the domain
domain <- dat[dat$pt == 0, ]

plot(vec2im(fld, domain$x, domain$y), main = "Black Oak Latent Field")
}
